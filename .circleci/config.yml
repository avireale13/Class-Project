version: 2.1

# -------------------------
#        COMMANDS
# -------------------------
commands:

  setup:
    steps:
        # for local builds, this needs to be checked out to `~/project`
        - checkout
        - run:
            name: Avoid hosts unknown for gitlab.gnome.org
            command: mkdir -p ~/.ssh/ && echo -e "Host gitlab.gnome.org\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
        - run:
            name: Install macports
            command: |
              scripts/macports0_install.sh home-dir
        # - run:
        #     name: Gimp version (default `master`)
        #     command: |
        #       pushd ${HOME}/project/modulesets
        #           if [ ! -z "${BRANCH}" ]; then
        #               revision_or_tag="revision=\"${BRANCH}\""
        #           elif [ ! -z "${TAG}" ]; then
        #               revision_or_tag="tag=\"${TAG}\""
        #           else
        #               revision_or_tag="revision=\"master\""
        #           fi
        #           sed -e "s|%REVISION_OR_TAG%|${revision_or_tag}|g" \
        #               -e "s|%WARNING%|DO NOT EDIT THIS FILE. It is automatically generated from the modulesets/gtk-osx-gimp.modules.tmpl file.|g" \
        #               gtk-osx-gimp.modules.tmpl > gtk-osx-gimp.modules
        #       popd
        - run:
            name: checksums for caching
            command: |
              echo $(find ./ports -type f -exec md5 {} \; | md5 | cut -d' ' -f1)  >> CACHE_BREAK
              echo $(find ./scripts -type f -exec md5 {} \; | md5 | cut -d' ' -f1)  >> CACHE_ITER
              cat CACHE_BREAK
              cat CACHE_ITER

  get-cached-data:
    steps:
        - restore_cache:
            keys:
              - v{{ checksum "CACHE_BREAK" }}-gimpv3-{{ checksum "CACHE_ITER" }}
              - v{{ checksum "CACHE_BREAK" }}-gimp-depspt2v3-{{ checksum "CACHE_ITER" }}
              - v{{ checksum "CACHE_BREAK" }}-gimp-depspt1v3-{{ checksum "CACHE_ITER" }}
              - v{{ checksum "CACHE_BREAK" }}-gimpv3-
              - v{{ checksum "CACHE_BREAK" }}-gimp-depspt2v3-
              - v{{ checksum "CACHE_BREAK" }}-gimp-depspt1v3-

# -------------------------
#        JOBS
# -------------------------
jobs:

  build-env:
    macos:
        xcode: "13.3.0"
        resource_class: macos.x86.medium.gen2

    steps:
        - setup
        - build-env

  dependencies-part1:
    macos:
        xcode: "13.3.0"
        resource_class: macos.x86.medium.gen2

    steps:
        - setup
        - get-cached-data
        - run:
            name: Build GIMP dependencies part 1 (without gegl/babl)
            command: |
              scripts/macports1a_install_packages.sh circleci
            no_output_timeout: 30m
        - save_cache:
            paths:
              - /opt/local
            key: v{{ checksum "CACHE_BREAK" }}-gimp-depspt1v3-{{ checksum "CACHE_ITER" }}

  dependencies-part2:
    macos:
        xcode: "13.3.0"
        resource_class: macos.x86.medium.gen2

    steps:
        - setup
        - get-cached-data
        - run:
            name: Build GIMP dependencies part 1 (without gegl/babl)
            command: |
              scripts/macports1b_install_packages.sh circleci
            no_output_timeout: 30m
        - save_cache:
            paths:
              - /opt/local
            key: v{{ checksum "CACHE_BREAK" }}-gimp-depspt2v3-{{ checksum "CACHE_ITER" }}

  build-gimp-and-package:
    macos:
        xcode: "13.3.0"
        resource_class: macos.x86.medium.gen2

    steps:
        - setup
        - get-cached-data
        - run:
            name: Build GIMP
            # XXX `make check` is not working reliably under circle ci, so we are
            # not using --check flag
            command: |
              scripts/macports2_install_gimp.sh circleci
        - save_cache:
            paths:
              - /opt/local
            key: v{{ checksum "CACHE_BREAK" }}-gimpv3-{{ checksum "CACHE_ITER" }}
        - run:
            name: Setup gtk-mac-bundler
            command: |
              cd ~/Source
              git clone https://gitlab.gnome.org/lukaso/gtk-mac-bundler
              cd gtk-mac-bundler
              make install
        - run:
            name: Importing signing certificate
            command: |
              mkdir ${HOME}/codesign && cd ${HOME}/codesign
              echo "$osx_crt" | base64 -D > gnome.pfx
              curl 'https://developer.apple.com/certificationauthority/AppleWWDRCA.cer' > apple.cer
              security create-keychain -p "" signchain
              security set-keychain-settings signchain
              security unlock-keychain -u signchain
              security list-keychains  -s "${HOME}/Library/Keychains/signchain-db" "${HOME}/Library/Keychains/login.keychain-db"
              security import apple.cer -k signchain  -T /usr/bin/codesign
              security import gnome.pfx  -k signchain -P "$osx_crt_pw" -T /usr/bin/codesign
              security set-key-partition-list -S apple-tool:,apple: -k "" signchain
              rm -rf ${HOME}/codesign
        - run:
            name: Creating DMG package
            command: |
              # Authorize applescript on circle ci build
              epochdate=$(($(date +'%s * 1000 + %-N / 1000000')))
              tcc_service_appleevents="replace into access (service,client,client_type,auth_value,auth_reason,auth_version,indirect_object_identifier_type,indirect_object_identifier,flags,last_modified) values (\"kTCCServiceAppleEvents\",\"/usr/sbin/sshd\",1,2,4,1,0,\"com.apple.finder\",0,$epochdate);"
              sudo sqlite3 "/Users/distiller/Library/Application Support/com.apple.TCC/TCC.db" "$tcc_service_appleevents"

              # run script
              scripts/macports3_build_dmg.sh
        - run:
            name:  Notarizing DMG package
            command: |
              package/notarize.sh
        - store_artifacts:
            path: /tmp/artifacts
            destination: builds

workflows:
  version: 2
  build-different-versions:
    jobs:
      - dependencies-part1
      - dependencies-part2:
          requires:
            - dependencies-part1
      - build-gimp-and-package:
          requires:
            - dependencies-part2
